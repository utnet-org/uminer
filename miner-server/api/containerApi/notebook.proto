syntax = "proto3";

package containerApi;

option go_package = "../containerApi";


service NotebookService {
  rpc CreateNotebook (CreateNoteBookRequest) returns (CreateNoteBookReply);
  rpc DeleteNotebook (DeleteNotebookRequest) returns (DeleteNotebookReply);
  rpc StartNotebook (StartStopNotebookRequest) returns (StartStopNotebookReply);
  rpc StopNotebook (StartStopNotebookRequest) returns (StartStopNotebookReply);
  rpc QueryNotebookByCondition (QueryNotebookByConditionRequest) returns (QueryNotebookByConditionReply);
  rpc QueryNotebookEventRecord (QueryNotebookEventRecordRequest) returns (QueryNotebookEventRecordReply);
  rpc ObtainNotebookEvent (ObtainNotebookEventRequest) returns (ObtainNotebookEventReply);
}


message CreateNoteBookRequest {
  string token = 1;
  string name = 2;
  string description = 3;
  string algorithmId = 4;
  string imageId = 5;
  string resourceSpecId = 6;
}
message CreateNoteBookReply {
  string id = 1;
  bool status = 2;
}

message DeleteNotebookRequest {
  string token = 1;
  string id = 2;
}
message DeleteNotebookReply {
  string id = 1;
  bool status = 2;
}

message StartStopNotebookRequest {
  string token = 1;
  string id = 2;
}
message StartStopNotebookReply {
  string id = 1;
  bool status = 2;
}

message QueryNotebookByConditionRequest {
  string token = 1;
  string id = 2;
  int64 pageSize= 3;
  int64 pageIndex= 4;
}
message NotebookList {
  string notebookId  = 1;
  string userId = 2;
  string notebookJobId = 3;
  string notebookUrl = 4;
  string status = 5;
  int64  createdAt = 6;
}
message QueryNotebookByConditionReply {
    repeated NotebookList NoteBookList = 1;
}

message QueryNotebookEventRecordRequest{
  string token = 1;
  string notebookId = 2;
  int64 pageSize= 3;
  int64 pageIndex= 4;
}
message NotebookEventRecord {
   string notebookId = 1;
   string remark = 2;
   string time = 3;
   string types = 4;
}
message QueryNotebookEventRecordReply {
  repeated NotebookEventRecord NotebookEventRecords = 1;
}

message ObtainNotebookEventRequest{
  string token = 1;
  string notebookJobId = 2;
  int64 pageSize= 3;
  int64 pageIndex= 4;
  int64 taskIndex = 5;
  int64 replicaIndex = 6;
}
message NotebookEvent {
  string message = 1;
  string name = 2;
  string reason = 3;
  string timestamp = 4;
}
message ObtainNotebookEventReply {
  repeated NotebookEvent NotebookEvents = 1;
}